/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pl.edu.wat.dbocian.et.plugin.ui.panels;

import org.netbeans.validation.api.Problems;
import org.netbeans.validation.api.Validator;
import org.netbeans.validation.api.builtin.Validators;
import org.netbeans.validation.api.ui.ValidationGroup;
import org.netbeans.validation.api.ui.ValidationPanel;
import pl.edu.wat.dbocian.et.plugin.ui.validators.BetweenZeroAndOneValidator;

/**
 * @author Daniel Bocian
 * 
 */
public class WattsStrogatzAlphaPanel extends javax.swing.JPanel {

    /**
     * Creates new form WattsStrogatzAlphaPanel
     */
    public WattsStrogatzAlphaPanel() {
        initComponents();
    }

    public static ValidationPanel createValidationPanel(WattsStrogatzAlphaPanel innerPanel) {
        ValidationPanel validationPanel = new ValidationPanel();
        if (innerPanel == null) {
            innerPanel = new WattsStrogatzAlphaPanel();
        }
        validationPanel.setInnerComponent(innerPanel);

        ValidationGroup group = validationPanel.getValidationGroup();

        group.add(innerPanel.nField, Validators.REQUIRE_NON_EMPTY_STRING,
                new nkValidator(innerPanel));
        group.add(innerPanel.kField, Validators.REQUIRE_NON_EMPTY_STRING,
                new nkValidator(innerPanel));
        group.add(innerPanel.alphaField, Validators.REQUIRE_NON_EMPTY_STRING,
                new alphaValidator(innerPanel));
        group.add(innerPanel.pField, Validators.REQUIRE_NON_EMPTY_STRING,
                new BetweenZeroAndOneValidator(innerPanel.pLabel.getText()));
        group.add(innerPanel.mField, Validators.REQUIRE_NON_EMPTY_STRING, 
                new mValidator(innerPanel));

        return validationPanel;
    }

    public void showFields() {
        pField.setVisible(gnpRadio.isSelected());
        pLabel.setVisible(gnpRadio.isSelected());
        
        mField.setVisible(gnmRadio.isSelected());
        mLabel.setVisible(gnmRadio.isSelected());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topologyGroup = new javax.swing.ButtonGroup();
        nLabel = new javax.swing.JLabel();
        nField = new javax.swing.JTextField();
        kLabel = new javax.swing.JLabel();
        kField = new javax.swing.JTextField();
        alphaLabel = new javax.swing.JLabel();
        alphaField = new javax.swing.JTextField();
        topologyLabel = new javax.swing.JLabel();
        ringRadio = new javax.swing.JRadioButton();
        gnpRadio = new javax.swing.JRadioButton();
        gnmRadio = new javax.swing.JRadioButton();
        pField = new javax.swing.JTextField();
        pLabel = new javax.swing.JLabel();
        mLabel = new javax.swing.JLabel();
        mField = new javax.swing.JTextField();

        nLabel.setLabelFor(nField);
        nLabel.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.nLabel.text")); // NOI18N

        nField.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.text")); // NOI18N
        nField.setName(""); // NOI18N
        nField.setPreferredSize(new java.awt.Dimension(125, 20));

        kLabel.setLabelFor(kField);
        kLabel.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.kLabel.text")); // NOI18N

        kField.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.kField.text")); // NOI18N
        kField.setPreferredSize(new java.awt.Dimension(125, 20));

        alphaLabel.setLabelFor(alphaField);
        alphaLabel.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.alphaLabel.text")); // NOI18N

        alphaField.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.alphaField.text")); // NOI18N
        alphaField.setPreferredSize(new java.awt.Dimension(125, 20));

        topologyLabel.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.topologyLabel.text")); // NOI18N

        topologyGroup.add(ringRadio);
        ringRadio.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.ringRadio.text")); // NOI18N
        ringRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ringRadioActionPerformed(evt);
            }
        });

        topologyGroup.add(gnpRadio);
        gnpRadio.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.gnpRadio.text")); // NOI18N
        gnpRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gnpRadioActionPerformed(evt);
            }
        });

        topologyGroup.add(gnmRadio);
        gnmRadio.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.gnmRadio.text")); // NOI18N
        gnmRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gnmRadioActionPerformed(evt);
            }
        });

        pField.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.pField.text")); // NOI18N
        pField.setPreferredSize(new java.awt.Dimension(125, 20));

        pLabel.setLabelFor(pField);
        pLabel.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.pLabel.text")); // NOI18N

        mLabel.setLabelFor(mField);
        mLabel.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.mLabel.text")); // NOI18N

        mField.setText(org.openide.util.NbBundle.getMessage(WattsStrogatzAlphaPanel.class, "WattsStrogatzAlphaPanel.mField.text")); // NOI18N
        mField.setPreferredSize(new java.awt.Dimension(125, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nLabel)
                    .addComponent(kLabel)
                    .addComponent(alphaLabel)
                    .addComponent(topologyLabel)
                    .addComponent(pLabel)
                    .addComponent(mLabel))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gnmRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alphaField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ringRadio)
                            .addComponent(gnpRadio))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(nField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kLabel)
                    .addComponent(kField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alphaLabel)
                    .addComponent(alphaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ringRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gnpRadio)
                    .addComponent(topologyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gnmRadio)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mLabel)
                    .addComponent(mField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ringRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ringRadioActionPerformed
        showFields();
    }//GEN-LAST:event_ringRadioActionPerformed

    private void gnpRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gnpRadioActionPerformed
        showFields();
    }//GEN-LAST:event_gnpRadioActionPerformed

    private void gnmRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gnmRadioActionPerformed
        showFields();
    }//GEN-LAST:event_gnmRadioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField alphaField;
    private javax.swing.JLabel alphaLabel;
    public javax.swing.JRadioButton gnmRadio;
    public javax.swing.JRadioButton gnpRadio;
    public javax.swing.JTextField kField;
    private javax.swing.JLabel kLabel;
    public javax.swing.JTextField mField;
    private javax.swing.JLabel mLabel;
    public javax.swing.JTextField nField;
    private javax.swing.JLabel nLabel;
    public javax.swing.JTextField pField;
    private javax.swing.JLabel pLabel;
    public javax.swing.JRadioButton ringRadio;
    public javax.swing.ButtonGroup topologyGroup;
    private javax.swing.JLabel topologyLabel;
    // End of variables declaration//GEN-END:variables

    private static class nkValidator implements Validator<String> {

        private final WattsStrogatzAlphaPanel innerPanel;

        public nkValidator(WattsStrogatzAlphaPanel innerPanel) {
            this.innerPanel = innerPanel;
        }

        @Override
        public boolean validate(Problems problems, String compName, String model) {
            boolean result;

            try {
                Integer n = Integer.parseInt(innerPanel.nField.getText());
                Integer k = Integer.parseInt(innerPanel.kField.getText());
                result = n > k && k > 0;
            } catch (NumberFormatException e) {
                result = false;
            }
            if (!result) {
                String message = "<html>n &gt; k &gt; 0</html>";
                problems.add(message);
            }

            return result;
        }
    }
    
    private static class alphaValidator implements Validator<String> {

        private final WattsStrogatzAlphaPanel innerPanel;

        public alphaValidator(WattsStrogatzAlphaPanel innerPanel) {
            this.innerPanel = innerPanel;
        }

        @Override
        public boolean validate(Problems problems, String compName, String model) {
            boolean result;

            try {
                Double alpha = Double.parseDouble(innerPanel.alphaField.getText());
                result = alpha >= 0;
            } catch (NumberFormatException e) {
                result = false;
            }
            if (!result) {
                String message = "<html>alpha &ge; 0</html>";
                problems.add(message);
            }

            return result;
        }
    }

    private static class mValidator implements Validator<String> {

        private final WattsStrogatzAlphaPanel innerPanel;

        public mValidator(WattsStrogatzAlphaPanel innerPanel) {
            this.innerPanel = innerPanel;
        }

        @Override
        public boolean validate(Problems problems, String compName, String model) {
            boolean result;

            try {
                Integer m = Integer.parseInt(innerPanel.mField.getText());
                Integer n = Integer.parseInt(innerPanel.nField.getText());
                Integer k = Integer.parseInt(innerPanel.kField.getText());
                result = m >= 0 && m <= n * (n - 1) / 2 && m <= n * k / 2;
            } catch (NumberFormatException e) {
                result = false;
            }
            if (!result) {
                String message = "<html>m &ge; 0<br>"
                        + "m &le; n * (n - 1) / 2<br>"
                        + "m &le; n * k / 2</html>";
                problems.add(message);
            }

            return result;
        }
    }
}
